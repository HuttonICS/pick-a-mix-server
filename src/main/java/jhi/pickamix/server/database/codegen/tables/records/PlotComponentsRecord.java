/*
 * This file is generated by jOOQ.
 */
package jhi.pickamix.server.database.codegen.tables.records;


import jhi.pickamix.server.database.codegen.tables.PlotComponents;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlotComponentsRecord extends UpdatableRecordImpl<PlotComponentsRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pickamix_db.plot_components.plot_id</code>.
     */
    public void setPlotId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pickamix_db.plot_components.plot_id</code>.
     */
    public Integer getPlotId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pickamix_db.plot_components.component_id</code>.
     */
    public void setComponentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>pickamix_db.plot_components.component_id</code>.
     */
    public Integer getComponentId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PlotComponents.PLOT_COMPONENTS.PLOT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return PlotComponents.PLOT_COMPONENTS.COMPONENT_ID;
    }

    @Override
    public Integer component1() {
        return getPlotId();
    }

    @Override
    public Integer component2() {
        return getComponentId();
    }

    @Override
    public Integer value1() {
        return getPlotId();
    }

    @Override
    public Integer value2() {
        return getComponentId();
    }

    @Override
    public PlotComponentsRecord value1(Integer value) {
        setPlotId(value);
        return this;
    }

    @Override
    public PlotComponentsRecord value2(Integer value) {
        setComponentId(value);
        return this;
    }

    @Override
    public PlotComponentsRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlotComponentsRecord
     */
    public PlotComponentsRecord() {
        super(PlotComponents.PLOT_COMPONENTS);
    }

    /**
     * Create a detached, initialised PlotComponentsRecord
     */
    public PlotComponentsRecord(Integer plotId, Integer componentId) {
        super(PlotComponents.PLOT_COMPONENTS);

        setPlotId(plotId);
        setComponentId(componentId);
    }

    /**
     * Create a detached, initialised PlotComponentsRecord
     */
    public PlotComponentsRecord(jhi.pickamix.server.database.codegen.tables.pojos.PlotComponents value) {
        super(PlotComponents.PLOT_COMPONENTS);

        if (value != null) {
            setPlotId(value.getPlotId());
            setComponentId(value.getComponentId());
        }
    }
    // @formatter:on
}
