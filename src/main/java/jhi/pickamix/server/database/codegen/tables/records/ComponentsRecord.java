/*
 * This file is generated by jOOQ.
 */
package jhi.pickamix.server.database.codegen.tables.records;


import java.sql.Timestamp;

import jhi.pickamix.server.database.codegen.tables.Components;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComponentsRecord extends UpdatableRecordImpl<ComponentsRecord> implements Record5<Integer, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pickamix_db.components.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>pickamix_db.components.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>pickamix_db.components.crop</code>.
     */
    public void setCrop(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pickamix_db.components.crop</code>.
     */
    public String getCrop() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pickamix_db.components.variety</code>.
     */
    public void setVariety(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>pickamix_db.components.variety</code>.
     */
    public String getVariety() {
        return (String) get(2);
    }

    /**
     * Setter for <code>pickamix_db.components.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>pickamix_db.components.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>pickamix_db.components.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>pickamix_db.components.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Components.COMPONENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Components.COMPONENTS.CROP;
    }

    @Override
    public Field<String> field3() {
        return Components.COMPONENTS.VARIETY;
    }

    @Override
    public Field<Timestamp> field4() {
        return Components.COMPONENTS.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field5() {
        return Components.COMPONENTS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCrop();
    }

    @Override
    public String component3() {
        return getVariety();
    }

    @Override
    public Timestamp component4() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component5() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCrop();
    }

    @Override
    public String value3() {
        return getVariety();
    }

    @Override
    public Timestamp value4() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value5() {
        return getUpdatedOn();
    }

    @Override
    public ComponentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ComponentsRecord value2(String value) {
        setCrop(value);
        return this;
    }

    @Override
    public ComponentsRecord value3(String value) {
        setVariety(value);
        return this;
    }

    @Override
    public ComponentsRecord value4(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ComponentsRecord value5(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ComponentsRecord values(Integer value1, String value2, String value3, Timestamp value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComponentsRecord
     */
    public ComponentsRecord() {
        super(Components.COMPONENTS);
    }

    /**
     * Create a detached, initialised ComponentsRecord
     */
    public ComponentsRecord(Integer id, String crop, String variety, Timestamp createdOn, Timestamp updatedOn) {
        super(Components.COMPONENTS);

        setId(id);
        setCrop(crop);
        setVariety(variety);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised ComponentsRecord
     */
    public ComponentsRecord(jhi.pickamix.server.database.codegen.tables.pojos.Components value) {
        super(Components.COMPONENTS);

        if (value != null) {
            setId(value.getId());
            setCrop(value.getCrop());
            setVariety(value.getVariety());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
