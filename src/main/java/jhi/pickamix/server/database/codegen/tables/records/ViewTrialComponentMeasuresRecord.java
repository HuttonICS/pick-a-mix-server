/*
 * This file is generated by jOOQ.
 */
package jhi.pickamix.server.database.codegen.tables.records;


import jhi.pickamix.server.database.codegen.enums.ViewTrialComponentMeasuresMeasureDatatype;
import jhi.pickamix.server.database.codegen.enums.ViewTrialComponentMeasuresPlotMeasurementType;
import jhi.pickamix.server.database.codegen.tables.ViewTrialComponentMeasures;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewTrialComponentMeasuresRecord extends TableRecordImpl<ViewTrialComponentMeasuresRecord> implements Record10<Integer, String, String, Integer, String, ViewTrialComponentMeasuresMeasureDatatype, ViewTrialComponentMeasuresPlotMeasurementType, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.component_id</code>.
     */
    public void setComponentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.component_id</code>.
     */
    public Integer getComponentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.component_crop</code>.
     */
    public void setComponentCrop(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.component_crop</code>.
     */
    public String getComponentCrop() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.component_variety</code>.
     */
    public void setComponentVariety(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.component_variety</code>.
     */
    public String getComponentVariety() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.measure_id</code>.
     */
    public void setMeasureId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.measure_id</code>.
     */
    public Integer getMeasureId() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.measure_name</code>.
     */
    public void setMeasureName(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.measure_name</code>.
     */
    public String getMeasureName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.measure_datatype</code>.
     */
    public void setMeasureDatatype(ViewTrialComponentMeasuresMeasureDatatype value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.measure_datatype</code>.
     */
    public ViewTrialComponentMeasuresMeasureDatatype getMeasureDatatype() {
        return (ViewTrialComponentMeasuresMeasureDatatype) get(5);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.plot_measurement_type</code>.
     */
    public void setPlotMeasurementType(ViewTrialComponentMeasuresPlotMeasurementType value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.plot_measurement_type</code>.
     */
    public ViewTrialComponentMeasuresPlotMeasurementType getPlotMeasurementType() {
        return (ViewTrialComponentMeasuresPlotMeasurementType) get(6);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.measure_value</code>.
     */
    public void setMeasureValue(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.measure_value</code>.
     */
    public String getMeasureValue() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.trial_id</code>.
     */
    public void setTrialId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.trial_id</code>.
     */
    public Integer getTrialId() {
        return (Integer) get(8);
    }

    /**
     * Setter for
     * <code>pickamix_db.view_trial_component_measures.trial_name</code>.
     */
    public void setTrialName(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>pickamix_db.view_trial_component_measures.trial_name</code>.
     */
    public String getTrialName() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, Integer, String, ViewTrialComponentMeasuresMeasureDatatype, ViewTrialComponentMeasuresPlotMeasurementType, String, Integer, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, Integer, String, ViewTrialComponentMeasuresMeasureDatatype, ViewTrialComponentMeasuresPlotMeasurementType, String, Integer, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.COMPONENT_ID;
    }

    @Override
    public Field<String> field2() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.COMPONENT_CROP;
    }

    @Override
    public Field<String> field3() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.COMPONENT_VARIETY;
    }

    @Override
    public Field<Integer> field4() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.MEASURE_ID;
    }

    @Override
    public Field<String> field5() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.MEASURE_NAME;
    }

    @Override
    public Field<ViewTrialComponentMeasuresMeasureDatatype> field6() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.MEASURE_DATATYPE;
    }

    @Override
    public Field<ViewTrialComponentMeasuresPlotMeasurementType> field7() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.PLOT_MEASUREMENT_TYPE;
    }

    @Override
    public Field<String> field8() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.MEASURE_VALUE;
    }

    @Override
    public Field<Integer> field9() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.TRIAL_ID;
    }

    @Override
    public Field<String> field10() {
        return ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES.TRIAL_NAME;
    }

    @Override
    public Integer component1() {
        return getComponentId();
    }

    @Override
    public String component2() {
        return getComponentCrop();
    }

    @Override
    public String component3() {
        return getComponentVariety();
    }

    @Override
    public Integer component4() {
        return getMeasureId();
    }

    @Override
    public String component5() {
        return getMeasureName();
    }

    @Override
    public ViewTrialComponentMeasuresMeasureDatatype component6() {
        return getMeasureDatatype();
    }

    @Override
    public ViewTrialComponentMeasuresPlotMeasurementType component7() {
        return getPlotMeasurementType();
    }

    @Override
    public String component8() {
        return getMeasureValue();
    }

    @Override
    public Integer component9() {
        return getTrialId();
    }

    @Override
    public String component10() {
        return getTrialName();
    }

    @Override
    public Integer value1() {
        return getComponentId();
    }

    @Override
    public String value2() {
        return getComponentCrop();
    }

    @Override
    public String value3() {
        return getComponentVariety();
    }

    @Override
    public Integer value4() {
        return getMeasureId();
    }

    @Override
    public String value5() {
        return getMeasureName();
    }

    @Override
    public ViewTrialComponentMeasuresMeasureDatatype value6() {
        return getMeasureDatatype();
    }

    @Override
    public ViewTrialComponentMeasuresPlotMeasurementType value7() {
        return getPlotMeasurementType();
    }

    @Override
    public String value8() {
        return getMeasureValue();
    }

    @Override
    public Integer value9() {
        return getTrialId();
    }

    @Override
    public String value10() {
        return getTrialName();
    }

    @Override
    public ViewTrialComponentMeasuresRecord value1(Integer value) {
        setComponentId(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value2(String value) {
        setComponentCrop(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value3(String value) {
        setComponentVariety(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value4(Integer value) {
        setMeasureId(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value5(String value) {
        setMeasureName(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value6(ViewTrialComponentMeasuresMeasureDatatype value) {
        setMeasureDatatype(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value7(ViewTrialComponentMeasuresPlotMeasurementType value) {
        setPlotMeasurementType(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value8(String value) {
        setMeasureValue(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value9(Integer value) {
        setTrialId(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord value10(String value) {
        setTrialName(value);
        return this;
    }

    @Override
    public ViewTrialComponentMeasuresRecord values(Integer value1, String value2, String value3, Integer value4, String value5, ViewTrialComponentMeasuresMeasureDatatype value6, ViewTrialComponentMeasuresPlotMeasurementType value7, String value8, Integer value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewTrialComponentMeasuresRecord
     */
    public ViewTrialComponentMeasuresRecord() {
        super(ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES);
    }

    /**
     * Create a detached, initialised ViewTrialComponentMeasuresRecord
     */
    public ViewTrialComponentMeasuresRecord(Integer componentId, String componentCrop, String componentVariety, Integer measureId, String measureName, ViewTrialComponentMeasuresMeasureDatatype measureDatatype, ViewTrialComponentMeasuresPlotMeasurementType plotMeasurementType, String measureValue, Integer trialId, String trialName) {
        super(ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES);

        setComponentId(componentId);
        setComponentCrop(componentCrop);
        setComponentVariety(componentVariety);
        setMeasureId(measureId);
        setMeasureName(measureName);
        setMeasureDatatype(measureDatatype);
        setPlotMeasurementType(plotMeasurementType);
        setMeasureValue(measureValue);
        setTrialId(trialId);
        setTrialName(trialName);
    }

    /**
     * Create a detached, initialised ViewTrialComponentMeasuresRecord
     */
    public ViewTrialComponentMeasuresRecord(jhi.pickamix.server.database.codegen.tables.pojos.ViewTrialComponentMeasures value) {
        super(ViewTrialComponentMeasures.VIEW_TRIAL_COMPONENT_MEASURES);

        if (value != null) {
            setComponentId(value.getComponentId());
            setComponentCrop(value.getComponentCrop());
            setComponentVariety(value.getComponentVariety());
            setMeasureId(value.getMeasureId());
            setMeasureName(value.getMeasureName());
            setMeasureDatatype(value.getMeasureDatatype());
            setPlotMeasurementType(value.getPlotMeasurementType());
            setMeasureValue(value.getMeasureValue());
            setTrialId(value.getTrialId());
            setTrialName(value.getTrialName());
        }
    }
    // @formatter:on
}
