/*
 * This file is generated by jOOQ.
 */
package jhi.pickamix.server.database.codegen.tables;


import java.sql.Timestamp;

import jhi.pickamix.server.database.codegen.PickamixDb;
import jhi.pickamix.server.database.codegen.tables.records.TrialMeasuresRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrialMeasures extends TableImpl<TrialMeasuresRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>pickamix_db.trial_measures</code>
     */
    public static final TrialMeasures TRIAL_MEASURES = new TrialMeasures();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrialMeasuresRecord> getRecordType() {
        return TrialMeasuresRecord.class;
    }

    /**
     * The column <code>pickamix_db.trial_measures.id</code>.
     */
    public final TableField<TrialMeasuresRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>pickamix_db.trial_measures.trial_id</code>.
     */
    public final TableField<TrialMeasuresRecord, Integer> TRIAL_ID = createField(DSL.name("trial_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>pickamix_db.trial_measures.measure_id</code>.
     */
    public final TableField<TrialMeasuresRecord, Integer> MEASURE_ID = createField(DSL.name("measure_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>pickamix_db.trial_measures.value</code>.
     */
    public final TableField<TrialMeasuresRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>pickamix_db.trial_measures.created_on</code>.
     */
    public final TableField<TrialMeasuresRecord, Timestamp> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>pickamix_db.trial_measures.updated_on</code>.
     */
    public final TableField<TrialMeasuresRecord, Timestamp> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMP(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    private TrialMeasures(Name alias, Table<TrialMeasuresRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrialMeasures(Name alias, Table<TrialMeasuresRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>pickamix_db.trial_measures</code> table reference
     */
    public TrialMeasures(String alias) {
        this(DSL.name(alias), TRIAL_MEASURES);
    }

    /**
     * Create an aliased <code>pickamix_db.trial_measures</code> table reference
     */
    public TrialMeasures(Name alias) {
        this(alias, TRIAL_MEASURES);
    }

    /**
     * Create a <code>pickamix_db.trial_measures</code> table reference
     */
    public TrialMeasures() {
        this(DSL.name("trial_measures"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PickamixDb.PICKAMIX_DB;
    }

    @Override
    public Identity<TrialMeasuresRecord, Integer> getIdentity() {
        return (Identity<TrialMeasuresRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TrialMeasuresRecord> getPrimaryKey() {
        return Internal.createUniqueKey(TrialMeasures.TRIAL_MEASURES, DSL.name("KEY_trial_measures_PRIMARY"), new TableField[] { TrialMeasures.TRIAL_MEASURES.ID }, true);
    }

    @Override
    public TrialMeasures as(String alias) {
        return new TrialMeasures(DSL.name(alias), this);
    }

    @Override
    public TrialMeasures as(Name alias) {
        return new TrialMeasures(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrialMeasures rename(String name) {
        return new TrialMeasures(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrialMeasures rename(Name name) {
        return new TrialMeasures(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, String, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
    // @formatter:on
}
